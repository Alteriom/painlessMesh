name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'website/**'
      - 'src/**'
      - 'docs/**'  
      - 'README.md'
      - 'doxygen/**'
      - 'examples/**'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: website/package-lock.json

      - name: Install Doxygen
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq doxygen graphviz

      - name: Generate API Documentation
        run: |
          # Use existing Doxygen configuration
          doxygen doxygen/Doxyfile

      - name: Install Docusaurus Dependencies
        working-directory: ./website
        run: npm ci

      - name: Integrate Doxygen with Docusaurus
        run: |
          # Create API docs directory in Docusaurus
          mkdir -p website/static/api
          
          # Copy Doxygen output to static folder
          if [ -d "doxygen/documentation/html" ]; then
            cp -r doxygen/documentation/html/* website/static/api/
          fi

      - name: Build Docusaurus Site
        working-directory: ./website
        run: npm run build

      - name: Setup Pages
        id: pages-setup
        uses: actions/configure-pages@v5
        continue-on-error: true

      - name: Upload artifact (if Pages configured)
        if: steps.pages-setup.outcome == 'success'
        uses: actions/upload-pages-artifact@v3
        with:
          path: './website/build'

      - name: Deploy to GitHub Pages (if Pages configured)
        if: steps.pages-setup.outcome == 'success'
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Skip Pages deployment (Pages not configured)
        if: steps.pages-setup.outcome == 'failure'
        run: |
          echo "::notice::GitHub Pages is not configured for this repository."
          echo "::notice::Documentation was built successfully but not deployed."
          echo "::notice::To enable Pages deployment:"
          echo "::notice::1. Go to repository Settings"
          echo "::notice::2. Navigate to Pages section"
          echo "::notice::3. Select 'GitHub Actions' as the source"