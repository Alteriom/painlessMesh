name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docsify-site/**'
      - 'src/**'
      - 'README.md'
      - 'doxygen/**'
      - 'examples/**'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Doxygen
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq doxygen graphviz

      - name: Generate API Documentation
        run: |
          # Ensure Doxygen output directory exists
          mkdir -p docs/api-reference
          
          # Generate Doxygen documentation
          echo "Generating Doxygen documentation..."
          doxygen doxygen/Doxyfile
          
          # Verify documentation was generated
          if [ -d "docs/api-reference/html" ]; then
            echo "✅ Doxygen documentation generated successfully"
            ls -la docs/api-reference/
          else
            echo "❌ Failed to generate Doxygen documentation"
            echo "Available directories:"
            ls -la docs/ || true
            exit 1
          fi

      - name: Prepare Docsify Documentation Site
        run: |
          # Create public directory
          mkdir -p public
          
          # Copy Docsify site
          cp -r docsify-site/* public/
          
          # Copy Doxygen documentation if it exists
          if [ -d "docs/api-reference/html" ]; then
            echo "✅ Copying Doxygen documentation to public/api-reference/"
            mkdir -p public/api-reference
            cp -r docs/api-reference/html/* public/api-reference/
            
            # Verify files were copied
            echo "API reference files:"
            ls -la public/api-reference/ | head -10
            
            # Create a simple verification page
            echo "<h1>API Documentation Available</h1>" > public/api-reference/status.html
            echo "<p>Doxygen documentation generated successfully</p>" >> public/api-reference/status.html
            echo "<p>Generated on: $(date)</p>" >> public/api-reference/status.html
            
          else
            echo "❌ Doxygen documentation not found at docs/api-reference/html"
            
            # Create fallback pages
            mkdir -p public/api-reference
            echo "<h1>API Documentation Unavailable</h1>" > public/api-reference/index.html
            echo "<p>Doxygen documentation generation failed</p>" >> public/api-reference/index.html
            echo "<p>Please check the build logs for errors</p>" >> public/api-reference/index.html
            
            # Create fallback for embedded pages
            mkdir -p public/api/doxygen
            
            cat > public/api/doxygen/classes.md << 'EOF'
          # Class Reference
          
          ⚠️ **API documentation is currently unavailable**
          
          The Doxygen documentation generation failed during the build process. 
          
          ## Alternative Documentation
          
          While we work to fix the API reference, you can:
          
          - Check the [Core API Guide](../core-api.md) for high-level documentation
          - View source code directly in the [GitHub repository](https://github.com/Alteriom/painlessMesh/tree/main/src)
          - Review the [examples](https://github.com/Alteriom/painlessMesh/tree/main/examples) for usage patterns
          
          ## Troubleshooting
          
          If you're a developer, you can generate the documentation locally:
          
          ```bash
          # Install Doxygen
          sudo apt-get install doxygen graphviz
          
          # Generate documentation
          doxygen doxygen/Doxyfile
          
          # Open docs/api-reference/html/index.html
          ```
          EOF
            
            # Create similar fallbacks for functions and files
            cp public/api/doxygen/classes.md public/api/doxygen/functions.md
            cp public/api/doxygen/classes.md public/api/doxygen/files.md
            
            # Update titles
            sed -i 's/Class Reference/Function Reference/g' public/api/doxygen/functions.md
            sed -i 's/Class Reference/File Reference/g' public/api/doxygen/files.md
          fi
          
          # Ensure proper file structure for Docsify
          touch public/.nojekyll
          
          # Add GitHub Pages configuration
          echo "Theme: Cayman" > public/_config.yml

      - name: Setup Pages
        id: pages-setup
        uses: actions/configure-pages@v5
        continue-on-error: true

      - name: Upload artifact (if Pages configured)
        if: steps.pages-setup.outcome == 'success'
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: Deploy to GitHub Pages (if Pages configured)
        if: steps.pages-setup.outcome == 'success'
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Skip Pages deployment (Pages not configured)
        if: steps.pages-setup.outcome == 'failure'
        run: |
          echo "::notice::GitHub Pages is not configured for this repository."
          echo "::notice::Docsify documentation was built successfully but not deployed."
          echo "::notice::To enable Pages deployment:"
          echo "::notice::1. Go to repository Settings"
          echo "::notice::2. Navigate to Pages section"
          echo "::notice::3. Select 'GitHub Actions' as the source"